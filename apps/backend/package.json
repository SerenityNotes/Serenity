{
  "name": "backend",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "yarn prisma migrate dev && ts-node-dev --transpile-only --no-notify ./src/index.ts",
    "dev:e2e": "(export PORT=4001; export DATABASE_URL=postgres://prisma:prisma@localhost:5432/serenity_e2e_tests; yarn prisma migrate reset --force && yarn prisma migrate dev && ts-node-dev --transpile-only --no-notify ./src/index.ts)",
    "dev:mock": "yarn && yarn prisma generate && MOCK_GRAPHQL=true ts-node-dev --transpile-only --no-notify ./src/index.ts",
    "clean": "rm -rf build",
    "build:copy-externals": "mkdir node_modules/@serenity-kit && cp -r ../../node_modules/@serenity-kit/opaque ./node_modules/@serenity-kit/opaque",
    "build": "yarn && yarn clean && yarn prisma:prod:generate && yarn ncc build ./src/index.ts -o build --external @serenity-kit/opaque && yarn build:copy-externals",
    "deploy": "yarn build && fly launch",
    "prisma:prod:migrate": "yarn global add prisma@4 && DATABASE_URL=$DATABASE_URL prisma migrate deploy",
    "prisma:prod:generate": "DATABASE_URL=$DATABASE_URL prisma generate",
    "prisma:prod:studio": "DATABASE_URL=$DATABASE_URL prisma studio",
    "prisma:test:studio": "DATABASE_URL=postgres://prisma:prisma@localhost:5432/serenity_test prisma studio",
    "prisma:e2etest:studio": "DATABASE_URL=postgres://prisma:prisma@localhost:5432/serenity_e2e_tests prisma studio",
    "start:prod": "PORT=$PORT DATABASE_URL=$DATABASE_URL NODE_ENV=production node ./build",
    "start:e2e": "export $(cat .e2e-tests.env | xargs) && yarn prisma migrate dev && node ./build",
    "ts:check": "yarn tsc --noEmit",
    "test:e2e": "DATABASE_URL=postgres://prisma:prisma@localhost:5432/serenity_e2e_tests npx playwright test",
    "test:e2e:headed": "DATABASE_URL=postgres://prisma:prisma@localhost:5432/serenity_e2e_tests npx playwright test --headed",
    "test": "node --max-old-space-size=8192 ./node_modules/.bin/jest --runInBand --logHeapUsage --detectOpenHandles",
    "lint": "eslint --ext .tsx --ext .ts ./",
    "r2:enable-cors": "ts-node ./scripts/enableCorsForR2Bucket.ts"
  },
  "dependencies": {
    "@aws-sdk/client-s3": "^3.193.0",
    "@aws-sdk/s3-request-presigner": "^3.194.0",
    "@serenity-tools/secsync": "*",
    "@prisma/client": "^4.8.0",
    "@sendgrid/mail": "^7.7.0",
    "@serenity-kit/opaque": "^0.7.0",
    "@serenity-tools/common": "*",
    "apollo-server-express": "^3.10.2",
    "canonicalize": "^2.0.0",
    "express": "^4.18.1",
    "graphql": "^16.6.0",
    "libsodium-wrappers": "^0.7.11",
    "make-promises-safe": "^5.1.0",
    "nexus": "^1.1.0",
    "ws": "^8.9.0",
    "zod": "^3.20.6"
  },
  "devDependencies": {
    "@playwright/test": "^1.37.0",
    "@types/libsodium-wrappers": "^0.7.10",
    "@types/node": "16.11.9",
    "@types/ws": "^8.2.1",
    "@vercel/ncc": "^0.34.0",
    "dotenv": "^16.0.3",
    "eslint": "^8.24.0",
    "graphql-request": "^5.0.0",
    "jest": "^29.1.1",
    "prisma": "^4.8.0",
    "ts-node": "10.9.1",
    "ts-node-dev": "^2.0.0",
    "typescript": "^4.8.4"
  },
  "jest": {
    "globalSetup": "<rootDir>/test/config/jestGlobalSetup.ts",
    "setupFilesAfterEnv": [
      "<rootDir>/test/config/jestTestSetupAfterEnv.ts"
    ],
    "setupFiles": [
      "<rootDir>/test/config/jestTestSetup.ts"
    ],
    "transform": {
      "\\.tsx?$": [
        "babel-jest",
        {
          "configFile": "./.babelrc.jest.js"
        }
      ]
    }
  }
}
